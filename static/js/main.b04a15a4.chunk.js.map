{"version":3,"sources":["misc/firebase.js","pages/Signin.js","context/profile.context.js","components/PrivateRoute.js","misc/helpers.js","components/EditableInput.js","misc/custom-hooks.js","components/ProfileAvatar.js","components/dashboard/AvatarUploadBtn.js","components/dashboard/ProviderBlock.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","components/dashboard/CreateRoomBtnModal.js","context/rooms.context.js","components/rooms/RoomItem.js","components/rooms/ChatRoomList.js","components/Sidebar.js","context/current-room.context.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/RoomInfoBtnModal.js","components/chat-window/top/index.js","components/Presence.js","components/chat-window/messages/IconBtnControl.js","components/chat-window/messages/ImgBtnModal.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","components/chat-window/bottom/AttatchmentBtnModal.js","components/chat-window/bottom/AudioMsgBtn.js","components/chat-window/bottom/index.js","pages/home/Chat.js","pages/home/index.js","components/PublicRoute.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","Signin","signInWithProvider","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","ref","uid","set","name","displayName","createdAt","ServerValue","TIMESTAMP","Alert","success","error","message","Container","Grid","className","Row","Col","xs","md","mdOffset","Panel","Button","block","color","onClick","FacebookAuthProvider","Icon","icon","GoogleAuthProvider","isOfflineForDatabase","state","last_changed","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusRef","authUnsub","onAuthStateChanged","authObj","on","snap","val","data","avatar","email","snapshot","onDisconnect","then","off","Provider","value","useProfile","useContext","PrivateRoute","routeProps","Loader","to","getNameIntials","splitName","toUpperCase","split","length","transformToArrWithId","snapVal","Object","keys","map","roomId","id","getUserUpdates","userId","keyToUpdate","db","updates","getMsgs","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","EditableInput","initialValue","onSave","label","placeholder","emptyMsg","wrapper","inputProps","input","setInput","isEditable","setIsEditable","onInputChange","useCallback","onEditClick","p","onSaveClick","trimmed","trim","InputGroup","Input","disabled","onChange","useModalState","defaultValue","isOpen","setIsOpen","open","close","useMediaQuery","query","window","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","Error","AvatarUploadBtn","avatarEditorRef","useRef","img","setImg","onUploadClick","current","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","info","src","htmlFor","type","accept","ev","currentFile","target","files","file","includes","isValidFile","warning","Modal","show","onHide","Header","Title","Body","image","width","height","border","borderRadius","rotate","Footer","appearance","ProviderBlock","currentUser","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","console","log","unlink","link","linkWithPopup","Tag","closable","onClose","Dashboard","onSignOut","newData","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","StringType","Schema","Types","model","Model","isRequired","discription","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","formRef","onFormChange","onSubmit","check","newRoomData","admins","push","Form","fluid","FormGroup","ControlLabel","FormControl","componentClass","rows","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","RoomItem","room","lastMessage","datetime","Date","author","size","text","ChatRoomList","aboveElHeight","location","useLocation","Nav","vertical","reversed","style","activeKey","pathname","center","content","speed","Item","Link","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","EditRoomBtnDrawer","chatId","useParams","v","description","updateData","newName","newDescription","memo","RoomInfoBtnModal","ChatTop","isAdmin","ButtonToolbar","getColor","presence","getText","toLocaleDateString","Presence","setPresence","exists","usePresence","Whisper","controlId","trigger","speaker","Tooltip","Badge","backgroundColor","ConditionalBadge","condition","IconBtnControl","props","visibility","isVisible","badgeContent","delay","delayHide","delayShow","tooltip","IconButton","iconName","ImgBtnModal","fileName","alt","href","rel","ProfileInfoBtnModal","btnProps","shortName","MemberSince","renderFileMessage","contentType","url","controls","MessageItem","msg","handleAdmin","handleLike","handleDelete","likes","likeCount","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMsgAuthorAdmin","isAuthor","canGrantAdmin","canShowIcons","isLiked","messagesRef","Messages","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessges","limitToLast","onLoadMore","oldHeight","setTimeout","newHeight","scrollTop","adminsRef","transaction","alertMsg","msgId","messageRef","confirm","isLast","refFromURL","fileRef","delete","groupingKeyFn","groups","item","toDateString","reduce","result","groupingKey","items","date","msgs","renderMessages","AttatchmentBtnModal","afterUpload","fileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","Uploader","autoUpload","action","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assembleMessage","ChatBottom","onSendClick","msgData","messageId","msgeId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSideBar","exact","path","PublicRoute","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b04a15a4.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyBOMgmD_OR4zgOvplvzOJLgyhgE98JE6ZA',\r\n  authDomain: 'chat-web-app-4dc90.firebaseapp.com',\r\n  databaseURL: 'https://chat-web-app-4dc90-default-rtdb.firebaseio.com',\r\n  projectId: 'chat-web-app-4dc90',\r\n  storageBucket: 'chat-web-app-4dc90.appspot.com',\r\n  messagingSenderId: '120689734587',\r\n  appId: '1:120689734587:web:3b0f1746ca66932024ca9e',\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\nexport const auth = app.auth();\r\nexport const database = app.database();\r\nexport const storage = app.storage();\r\n","import React from 'react';\r\nimport { Alert, Button, Col, Container, Grid, Icon, Panel, Row } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\n\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst Signin = () => {\r\n  const signInWithProvider = async provider => {\r\n    try {\r\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n\r\n      if (additionalUserInfo.isNewUser) {\r\n        // store in data base\r\n        await database.ref(`/profiles/${user.uid}`).set({\r\n          name: user.displayName,\r\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n        });\r\n      }\r\n\r\n      Alert.success('Signed In', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const onFacebookSignIn = () => {\r\n    signInWithProvider(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n\r\n  const onGoogleSignIn = () => {\r\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid className=\"mt-page\">\r\n        <Row>\r\n          <Col xs={24} md={12} mdOffset={6}>\r\n            <Panel>\r\n              <div className=\"text-center\">\r\n                <h2>WELCOME TO CHAT</h2>\r\n                <p>Progressive chat platform</p>\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <Button block color=\"blue\" onClick={onFacebookSignIn}>\r\n                  <Icon icon=\"facebook\" /> Continue with Facebook\r\n                </Button>\r\n                <Button block color=\"red\" onClick={onGoogleSignIn}>\r\n                  <Icon icon=\"google\" /> Continue with Google\r\n                </Button>\r\n              </div>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nexport const isOfflineForDatabase = {\r\n  state: 'offline',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n  state: 'online',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = ({ children }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let userRef;\r\n    let userStatusRef;\r\n    const authUnsub = auth.onAuthStateChanged(authObj => {\r\n      if (authObj) {\r\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\r\n        userRef = database.ref(`/profiles/${authObj.uid}`);\r\n        userRef.on('value', snap => {\r\n          const { name, createdAt, avatar } = snap.val();\r\n\r\n          const data = {\r\n            name,\r\n            avatar,\r\n            createdAt,\r\n            uid: authObj.uid,\r\n            email: authObj.email,\r\n          };\r\n          setProfile(data);\r\n          setIsLoading(false);\r\n        });\r\n\r\n        database.ref('.info/connected').on('value', snapshot => {\r\n          if (!!snapshot.val() === false) {\r\n            return;\r\n          }\r\n\r\n          userStatusRef\r\n            .onDisconnect()\r\n            .set(isOfflineForDatabase)\r\n            .then(() => {\r\n              userStatusRef.set(isOnlineForDatabase);\r\n            });\r\n        });\r\n      } else {\r\n        if (userRef) {\r\n          userRef.off();\r\n        }\r\n\r\n        if (userStatusRef) {\r\n          userStatusRef.off();\r\n        }\r\n\r\n        database.ref('.info/connected').off();\r\n\r\n        setProfile(null);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      authUnsub();\r\n      database.ref('.info/connected').off();\r\n\r\n      if (userRef) {\r\n        userRef.off();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ProfileContext.Provider value={{ profile, isLoading }}>\r\n      {children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProfile = () => useContext(ProfileContext);\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PrivateRoute = ({ children, ...routeProps }) => {\r\n  const { profile, isLoading } = useProfile();\r\n\r\n  if (isLoading && !profile) {\r\n    <Container>\r\n      <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n    </Container>;\r\n  }\r\n\r\n  if (!profile && !isLoading) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","export function getNameIntials(name) {\r\n  const splitName = name.toUpperCase().split(' ');\r\n\r\n  if (splitName.length > 1) {\r\n    return splitName[0][0] + splitName[1][0];\r\n  }\r\n\r\n  return splitName[0][0];\r\n}\r\n\r\nexport function transformToArr(snapVal) {\r\n  return snapVal ? Object.keys(snapVal) : [];\r\n}\r\n\r\nexport function transformToArrWithId(snapVal) {\r\n  return snapVal\r\n    ? Object.keys(snapVal).map(roomId => {\r\n        return { ...snapVal[roomId], id: roomId };\r\n      })\r\n    : [];\r\n}\r\n\r\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\r\n  const updates = {};\r\n\r\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\r\n\r\n  const getMsgs = db\r\n    .ref('/messages')\r\n    .orderByChild('author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const getRooms = db\r\n    .ref('/rooms')\r\n    .orderByChild('lastMessage/author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const [mSnap, rSnap] = await Promise.all([getMsgs, getRooms]);\r\n\r\n  mSnap.forEach(msgSnap => {\r\n    updates[`messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  rSnap.forEach(roomSnap => {\r\n    updates[`rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  return updates;\r\n}\r\n\r\nexport function groupBy(array, groupingKeyFn) {\r\n  return array.reduce((result, item) => {\r\n    const groupingKey = groupingKeyFn(item);\r\n\r\n    if (!result[groupingKey]) {\r\n      result[groupingKey] = [];\r\n    }\r\n\r\n    result[groupingKey].push(item);\r\n\r\n    return result;\r\n  }, {});\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\n\r\nconst EditableInput = ({\r\n  initialValue,\r\n  onSave,\r\n  label = 'null',\r\n  placeholder = 'Write your value ',\r\n  emptyMsg = 'Input is empty',\r\n  wrapper = '',\r\n  ...inputProps\r\n}) => {\r\n  const [input, setInput] = useState(initialValue);\r\n  const [isEditable, setIsEditable] = useState(false);\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onEditClick = useCallback(() => {\r\n    setIsEditable(p => !p);\r\n    setInput(initialValue);\r\n  }, [initialValue]);\r\n\r\n  const onSaveClick = async () => {\r\n    const trimmed = input.trim();\r\n\r\n    if (trimmed === '') {\r\n      Alert.error(emptyMsg, 4000);\r\n    }\r\n\r\n    if (trimmed !== initialValue) {\r\n      await onSave(trimmed);\r\n    }\r\n\r\n    setIsEditable(false);\r\n  };\r\n\r\n  return (\r\n    <div className={wrapper}>\r\n      {label}\r\n      <InputGroup>\r\n        <Input\r\n          {...inputProps}\r\n          disabled={!isEditable}\r\n          placeholder={placeholder}\r\n          value={input}\r\n          onChange={onInputChange}\r\n        />\r\n        <InputGroup.Button onClick={onEditClick}>\r\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n        </InputGroup.Button>\r\n        {isEditable && (\r\n          <InputGroup.Button onClick={onSaveClick}>\r\n            <Icon icon=\"check\" />\r\n          </InputGroup.Button>\r\n        )}\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableInput;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { database } from './firebase';\r\n\r\nexport function useModalState(defaultValue = false) {\r\n  const [isOpen, setIsOpen] = useState(defaultValue);\r\n\r\n  const open = useCallback(() => {\r\n    setIsOpen(true);\r\n  }, []);\r\n\r\n  const close = useCallback(() => {\r\n    setIsOpen(false);\r\n  }, []);\r\n\r\n  return { isOpen, open, close };\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n  const [matches, setMatches] = useState(\r\n    () => window.matchMedia(query).matches\r\n  );\r\n\r\n  useEffect(() => {\r\n    const queryList = window.matchMedia(query);\r\n    setMatches(queryList.matches);\r\n\r\n    const listener = evt => setMatches(evt.matches);\r\n\r\n    queryList.addListener(listener);\r\n    return () => queryList.removeListener(listener);\r\n  }, [query]);\r\n\r\n  return matches;\r\n};\r\n\r\nexport function usePresence(uid) {\r\n  const [presence, setPresence] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userStatusRef = database.ref(`/status/${uid}`);\r\n\r\n    userStatusRef.on('value', snap => {\r\n      if (snap.exists()) {\r\n        const data = snap.val();\r\n\r\n        setPresence(data);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      userStatusRef.off();\r\n    };\r\n  }, [uid]);\r\n\r\n  return presence;\r\n}\r\n\r\nexport function useHover() {\r\n  const [value, setValue] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener('mouseover', handleMouseOver);\r\n        node.addEventListener('mouseout', handleMouseOut);\r\n      }\r\n      return () => {\r\n        node.removeEventListener('mouseover', handleMouseOver);\r\n        node.removeEventListener('mouseout', handleMouseOut);\r\n      };\r\n    },\r\n    [ref.current] // Recall only if ref changes\r\n  );\r\n\r\n  return [ref, value];\r\n}\r\n","import React from 'react';\r\nimport { Avatar } from 'rsuite';\r\nimport { getNameIntials } from '../misc/helpers';\r\n\r\nconst ProfileAvatar = ({ name, ...avatarProps }) => {\r\n  return (\r\n    <Avatar circle {...avatarProps}>\r\n      {getNameIntials(name)}\r\n    </Avatar>\r\n  );\r\n};\r\n\r\nexport default ProfileAvatar;\r\n","import React, { useState, useRef } from 'react';\r\nimport { Alert, Button, Modal } from 'rsuite';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport { useModalState } from '../../misc/custom-hooks';\r\nimport { storage, database } from '../../misc/firebase';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst fileInputTypes = '.png, .jpeg, .jpg';\r\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/pjpeg'];\r\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\r\n\r\nconst getBlob = canvas => {\r\n  return new Promise((resolve, reject) => {\r\n    canvas.toBlob(blob => {\r\n      if (blob) {\r\n        resolve(blob);\r\n      } else {\r\n        reject(new Error('image process error'));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst AvatarUploadBtn = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const avatarEditorRef = useRef();\r\n  const { profile } = useProfile();\r\n\r\n  const [img, setImg] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onFileInputChange = ev => {\r\n    const currentFile = ev.target.files;\r\n\r\n    if (currentFile.length === 1) {\r\n      const file = currentFile[0];\r\n\r\n      if (isValidFile(file)) {\r\n        setImg(file);\r\n\r\n        open();\r\n      } else {\r\n        Alert.warning(`${file.type} is not supported`, 4000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onUploadClick = async () => {\r\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const blob = await getBlob(canvas);\r\n\r\n      const avatarFileRef = storage\r\n        .ref(`/profiles/${profile.uid}`)\r\n        .child('avatar');\r\n\r\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\r\n        cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n      });\r\n\r\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\r\n\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'avatar',\r\n        downloadUrl,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      setIsLoading(false);\r\n      Alert.info('Image has been uploaded', 4000);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      Alert.error(error.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3 text-center\">\r\n      <ProfileAvatar\r\n        src={profile.avatar}\r\n        name={profile.name}\r\n        className=\"width-200 height-200 img-fullsize font-huge\"\r\n      />\r\n      <div>\r\n        <label\r\n          htmlFor=\"avatar-upload\"\r\n          className=\"d-block cursor-pointer padded\"\r\n        >\r\n          Select new avatar\r\n          <input\r\n            id=\"avatar-upload\"\r\n            type=\"file\"\r\n            className=\"d-none\"\r\n            accept={fileInputTypes}\r\n            onChange={onFileInputChange}\r\n          />\r\n        </label>\r\n        <Modal show={isOpen} onHide={close}>\r\n          <Modal.Header>\r\n            <Modal.Title>Adjust and Upload new avatar</Modal.Title>{' '}\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n              {img && (\r\n                <AvatarEditor\r\n                  ref={avatarEditorRef}\r\n                  image={img}\r\n                  width={200}\r\n                  height={200}\r\n                  border={10}\r\n                  borderRadius={100}\r\n                  rotate={0}\r\n                />\r\n              )}\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              block\r\n              appearance=\"ghost\"\r\n              onClick={onUploadClick}\r\n              disabled={isLoading}\r\n            >\r\n              Upload new avatar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarUploadBtn;\r\n","import React, { useState } from 'react';\r\nimport { Alert, Button, Icon, Tag } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst ProviderBlock = () => {\r\n  const [isConnected, setIsConnected] = useState({\r\n    'google.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'google.com'\r\n    ),\r\n    'facebook.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'facebook.com'\r\n    ),\r\n  });\r\n\r\n  const updateIsConnected = (providerId, value) => {\r\n    setIsConnected(p => {\r\n      return {\r\n        ...p,\r\n        [providerId]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  console.log(setIsConnected);\r\n  console.log(isConnected);\r\n\r\n  const unlink = async providerId => {\r\n    try {\r\n      if (auth.currentUser.providerData.length === 1) {\r\n        throw new Error(`Can not disconnect from ${providerId}`);\r\n      }\r\n\r\n      await auth.currentUser.unlink(providerId);\r\n      updateIsConnected(providerId, false);\r\n      Alert.info(`Disconnected from ${providerId} successfully`, 4000);\r\n    } catch (error) {\r\n      Alert.error(error.message, 4000);\r\n    }\r\n  };\r\n\r\n  const unlinkGoogle = () => {\r\n    unlink('google.com');\r\n  };\r\n  const unlinkFacebook = () => {\r\n    unlink('facebook.com');\r\n  };\r\n\r\n  const link = async provider => {\r\n    try {\r\n      await auth.currentUser.linkWithPopup(provider);\r\n      updateIsConnected(provider.providerId, true);\r\n      Alert.info(`Linked with ${provider.providerId} `, 4000);\r\n    } catch (error) {\r\n      Alert.error(error.message, 4000);\r\n    }\r\n  };\r\n\r\n  const linkGoogle = () => {\r\n    link(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n  const linkFacebook = () => {\r\n    link(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isConnected['google.com'] && (\r\n        <Tag closable color=\"green\" onClose={unlinkGoogle}>\r\n          <Icon icon=\"google\" /> Connected\r\n        </Tag>\r\n      )}\r\n\r\n      {isConnected['facebook.com'] && (\r\n        <Tag closable color=\"blue\" onClose={unlinkFacebook}>\r\n          <Icon icon=\"facebook\" /> Connected\r\n        </Tag>\r\n      )}\r\n\r\n      <div className=\"mt-2\">\r\n        {!isConnected['google.com'] && (\r\n          <Button block color=\"green\" onClick={linkGoogle}>\r\n            <Icon icon=\"google\" /> Link with Google Account\r\n          </Button>\r\n        )}\r\n\r\n        {!isConnected['facebook.com'] && (\r\n          <Button block color=\"blue\" onClick={linkFacebook}>\r\n            <Icon icon=\"facebook\" /> Link with Facebook Account\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProviderBlock;\r\n","import React from 'react';\r\nimport { Alert, Button, Divider, Drawer } from 'rsuite';\r\nimport { useProfile } from '../../context/profile.context';\r\n\r\nimport { getUserUpdates } from '../../misc/helpers';\r\nimport EditableInput from '../EditableInput';\r\nimport AvatarUploadBtn from './AvatarUploadBtn';\r\nimport ProviderBlock from './ProviderBlock';\r\nimport { database } from '../../misc/firebase';\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n  const { profile } = useProfile();\r\n  const onSave = async newData => {\r\n    try {\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'name',\r\n        newData,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      Alert.success('Nickname changed', 4000);\r\n    } catch (error) {\r\n      Alert.error(error.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer.Header>\r\n        <Drawer.Title>Dashboard</Drawer.Title>\r\n      </Drawer.Header>\r\n      <Drawer.Body>\r\n        <h3> Hey,{profile.name}</h3>\r\n        <ProviderBlock />\r\n        <Divider />\r\n        <EditableInput\r\n          name=\"nickname\"\r\n          initialValue={profile.name}\r\n          onSave={onSave}\r\n          label={<h6 className=\"mb-2\">Nickname</h6>}\r\n        />\r\n        <AvatarUploadBtn />\r\n      </Drawer.Body>\r\n      <Drawer.Footer>\r\n        <Button block color=\"red\" onClick={onSignOut}>\r\n          Sign Out\r\n        </Button>\r\n      </Drawer.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useCallback } from 'react';\r\nimport { Alert, Button, Drawer, Icon } from 'rsuite';\r\nimport Dashboard from '.';\r\nimport { isOfflineForDatabase } from '../../context/profile.context';\r\nimport { useMediaQuery, useModalState } from '../../misc/custom-hooks';\r\nimport { auth, database } from '../../misc/firebase';\r\n\r\nconst DashboardToggle = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const onSignOut = useCallback(() => {\r\n    database\r\n      .ref(`/status/${auth.currentUser.uid}`)\r\n      .set(isOfflineForDatabase)\r\n      .then(() => {\r\n        auth.signOut();\r\n\r\n        Alert.info('Signed Out', 4000);\r\n\r\n        close();\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  }, [close]);\r\n\r\n  return (\r\n    <>\r\n      <Button block color=\"blue\" onClick={open}>\r\n        <Icon icon=\"dashboard\" /> Dashboard\r\n      </Button>\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\r\n        <Dashboard onSignOut={onSignOut} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardToggle;\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport {\r\n  Button,\r\n  ControlLabel,\r\n  FormControl,\r\n  FormGroup,\r\n  Icon,\r\n  Modal,\r\n  Form,\r\n  Schema,\r\n  Alert,\r\n} from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useModalState } from '../../misc/custom-hooks';\r\nimport { auth, database } from '../../misc/firebase';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  name: StringType().isRequired('Chat name is Required'),\r\n  discription: StringType().isRequired('Discription is Required'),\r\n});\r\n\r\nconst INITIAL_FORM = {\r\n  name: '',\r\n  discription: '',\r\n};\r\n\r\nconst CreateRoomBtnModal = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const formRef = useRef();\r\n\r\n  const onFormChange = useCallback(value => {\r\n    setFormValue(value);\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    console.log(formRef.current);\r\n\r\n    if (formRef.current.check()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const newRoomData = {\r\n      ...formValue,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n      admins: { [auth.currentUser.uid]: true },\r\n    };\r\n\r\n    try {\r\n      await database.ref('rooms').push(newRoomData);\r\n\r\n      Alert.info(`${formValue.name} has been created`, 4000);\r\n\r\n      setIsLoading(false);\r\n      setFormValue(INITIAL_FORM);\r\n      close();\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      Alert.error(error.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-1\">\r\n      <Button block color=\"green\" onClick={open}>\r\n        <Icon icon=\"creative\" /> Create New Chat Room\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>New Chat Room</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form\r\n            fluid\r\n            onChange={onFormChange}\r\n            formValue={formValue}\r\n            model={model}\r\n            ref={formRef}\r\n          >\r\n            <FormGroup>\r\n              <ControlLabel>Room Name</ControlLabel>\r\n              <FormControl name=\"name\" placeholder=\"Enter chat room name...\" />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>Description</ControlLabel>\r\n              <FormControl\r\n                componentClass=\"textarea\"\r\n                rows={5}\r\n                name=\"description\"\r\n                placeholder=\"Enter room description...\"\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            block\r\n            appearance=\"primary\"\r\n            onClick={onSubmit}\r\n            disabled={isLoading}\r\n          >\r\n            Create New Chat Room\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateRoomBtnModal;\r\n\r\n// addd button to create new Chat room\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { database } from '../misc/firebase';\r\nimport { transformToArrWithId } from '../misc/helpers';\r\n\r\nconst RoomsContext = createContext();\r\n\r\nexport const RoomsProvider = ({ children }) => {\r\n  const [rooms, setRooms] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const roomListRef = database.ref('rooms');\r\n\r\n    roomListRef.on('value', snap => {\r\n      const data = transformToArrWithId(snap.val());\r\n      setRooms(data);\r\n    });\r\n\r\n    return () => {\r\n      roomListRef.off();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useRooms = () => {\r\n  return useContext(RoomsContext);\r\n};\r\n","import React from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\n\r\nconst RoomItem = ({ room }) => {\r\n  const { createdAt, name, lastMessage } = room;\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h3 className=\"text-disappear\">{name}</h3>\r\n        <TimeAgo\r\n          datetime={lastMessage ? new Date(lastMessage) : new Date(createdAt)}\r\n          className=\"font-normal text-black-45\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"d-flex alin-items-center text-black-70\">\r\n        {lastMessage ? (\r\n          <>\r\n            <div className=\"d-flex align-items-center\">\r\n              <ProfileAvatar\r\n                src={lastMessage.author.avatar}\r\n                name={lastMessage.author.name}\r\n                size=\"sm\"\r\n              />\r\n            </div>\r\n            <div className=\"text-disappear ml-2\">\r\n              <div> {lastMessage.author.name}</div>\r\n              <span className=\"italic\">\r\n                {lastMessage.text || lastMessage.file.name}\r\n              </span>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <span> No Messages Yet </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomItem;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Loader, Nav } from 'rsuite';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport RoomItem from './RoomItem';\r\n\r\nconst ChatRoomList = ({ aboveElHeight }) => {\r\n  const rooms = useRooms();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Nav\r\n      appearance=\"subtle\"\r\n      vertical\r\n      reversed\r\n      className=\"overflow-y-scroll\"\r\n      style={{ height: `calc(100% - ${aboveElHeight}px)` }}\r\n      activeKey={location.pathname}\r\n    >\r\n      {!rooms && (\r\n        <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"medium \" />\r\n      )}\r\n      {rooms &&\r\n        rooms.length > 0 &&\r\n        rooms.map(room => (\r\n          <Nav.Item\r\n            componentClass={Link}\r\n            to={`/chat/${room.id}`}\r\n            key={room.id}\r\n            eventKey={`/chat/${room.id}`}\r\n          >\r\n            <RoomItem room={room} />\r\n          </Nav.Item>\r\n        ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default ChatRoomList;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Divider } from 'rsuite';\r\nimport DashboardToggle from './dashboard/DashboardToggle';\r\nimport CreateRoomBtnModal from './dashboard/CreateRoomBtnModal';\r\nimport ChatRoomList from './rooms/ChatRoomList';\r\n\r\nconst Sidebar = () => {\r\n  const topSidebarRef = useRef();\r\n\r\n  const [height, setHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (topSidebarRef.current) {\r\n      setHeight(topSidebarRef.current.scrollHeight);\r\n    }\r\n  }, [topSidebarRef]);\r\n\r\n  return (\r\n    <div className=\"h-100 pt-2\">\r\n      <div ref={topSidebarRef}>\r\n        <DashboardToggle />\r\n        <CreateRoomBtnModal />\r\n        <Divider>Join Conversation</Divider>\r\n      </div>\r\n      <ChatRoomList aboveElHeight={height} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { createContext, useContextSelector } from 'use-context-selector';\r\nimport React from 'react';\r\n\r\nconst CurrentRoomContext = createContext();\r\n\r\nexport const CurrentRoomProvider = ({ children, data }) => {\r\n  return (\r\n    <CurrentRoomContext.Provider value={data}>\r\n      {children}\r\n    </CurrentRoomContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCurrentRoom = selector => {\r\n  return useContextSelector(CurrentRoomContext, selector);\r\n};\r\n","import React, { memo } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button, Drawer } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useMediaQuery, useModalState } from '../../../misc/custom-hooks';\r\nimport { database } from '../../../misc/firebase';\r\nimport EditableInput from '../../EditableInput';\r\n\r\nconst EditRoomBtnDrawer = () => {\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const { chatId } = useParams();\r\n\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const name = useCurrentRoom(v => v.name);\r\n  const description = useCurrentRoom(v => v.description);\r\n\r\n  const updateData = (key, value) => {\r\n    database\r\n      .ref(`rooms/${chatId}`)\r\n      .child(key)\r\n      .set(value)\r\n      .then(() => {\r\n        Alert.success('Successfully Updated', 4000);\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  };\r\n\r\n  const onNameSave = newName => {\r\n    updateData('name', newName);\r\n  };\r\n\r\n  const onDescriptionSave = newDescription => {\r\n    updateData('description', newDescription);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\r\n        A\r\n      </Button>\r\n\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\r\n        <Drawer.Header>\r\n          <Drawer.Title>Edit Room</Drawer.Title>\r\n        </Drawer.Header>\r\n        <Drawer.Body>\r\n          <EditableInput\r\n            initialValue={name}\r\n            onSave={onNameSave}\r\n            label={<h6 className=\"mb-2\">Name</h6>}\r\n            emptyMsg=\"Name cannot be empty\"\r\n          />\r\n          <EditableInput\r\n            initialValue={description}\r\n            onSave={onDescriptionSave}\r\n            label={' '}\r\n            emptyMsg=\"Description cannot be empty\"\r\n            componentClass=\"textarea\"\r\n            rows={5}\r\n            wrapper=\"mt-3\"\r\n          />\r\n        </Drawer.Body>\r\n        <Drawer.Footer>\r\n          <Button block onClick={close} color=\"red\">\r\n            Close\r\n          </Button>\r\n        </Drawer.Footer>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(EditRoomBtnDrawer);\r\n","import React, { memo } from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst RoomInfoBtnModal = () => {\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const description = useCurrentRoom(v => v.description);\r\n\r\n  const name = useCurrentRoom(v => v.name);\r\n\r\n  return (\r\n    <>\r\n      <Button appearance=\"link\" className=\"px-0\" onClick={open}>\r\n        Room Info\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>About {name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h6 className=\"mb-1\">Description</h6>\r\n          <p>{description}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(RoomInfoBtnModal);\r\n","import React, { memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonToolbar, Icon } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useMediaQuery } from '../../../misc/custom-hooks';\r\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\r\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\r\n\r\nconst ChatTop = () => {\r\n  const name = useCurrentRoom(v => v.name);\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const isMobile = useMediaQuery('(max-width: 992px');\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h4 className=\"text-disappear d-flex align-items-center \">\r\n          <Icon\r\n            componentClass={Link}\r\n            to=\"/\"\r\n            icon=\"arrow-circle-left\"\r\n            size=\"2x\"\r\n            className={\r\n              isMobile\r\n                ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\r\n                : 'd-none'\r\n            }\r\n          />\r\n          <span className=\"text-disappear\">{name}</span>\r\n        </h4>\r\n\r\n        <ButtonToolbar className=\"ws-nowrap\">\r\n          {isAdmin && <EditRoomBtnDrawer />}\r\n        </ButtonToolbar>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <span>todo</span>\r\n        <RoomInfoBtnModal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ChatTop);\r\n","import React from 'react';\r\nimport { Badge, Tooltip, Whisper } from 'rsuite';\r\nimport { usePresence } from '../misc/custom-hooks';\r\n\r\nconst getColor = presence => {\r\n  if (!presence) {\r\n    return 'gray';\r\n  }\r\n\r\n  switch (presence.state) {\r\n    case 'online':\r\n      return 'green';\r\n    case 'offline':\r\n      return 'red';\r\n    default:\r\n      return 'gray';\r\n  }\r\n};\r\n\r\nconst getText = presence => {\r\n  if (!presence) {\r\n    return 'Unknown state';\r\n  }\r\n\r\n  return presence.state === 'online'\r\n    ? 'Online'\r\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n};\r\n\r\nconst Presence = ({ uid }) => {\r\n  const presence = usePresence(uid);\r\n  return (\r\n    <Whisper\r\n      placement=\"top\"\r\n      controlId=\"control-id-hover\"\r\n      trigger=\"hover\"\r\n      speaker={<Tooltip>{getText(presence)}</Tooltip>}\r\n    >\r\n      <Badge\r\n        className=\"cursor-pointer\"\r\n        style={{ backgroundColor: getColor(presence) }}\r\n      />\r\n    </Whisper>\r\n  );\r\n};\r\n\r\nexport default Presence;\r\n","import React from 'react';\r\nimport { Badge, Icon, IconButton, Tooltip, Whisper } from 'rsuite';\r\n\r\nconst ConditionalBadge = ({ condition, children }) => {\r\n  return condition ? <Badge content={condition}>{children}</Badge> : children;\r\n};\r\n\r\nconst IconBtnControl = ({ ...props }) => {\r\n  //   const { isVisible, iconName, onClick, badgeContent, tooltip } = props;\r\n  return (\r\n    <div\r\n      className=\"ml-2\"\r\n      style={{ visibility: props.isVisible ? 'visible' : 'hidden' }}\r\n    >\r\n      <ConditionalBadge condition={props.badgeContent}>\r\n        <Whisper\r\n          placement=\"top\"\r\n          delay={0}\r\n          delayHide={0}\r\n          delayShow={0}\r\n          trigger=\"hover\"\r\n          speaker={<Tooltip>{props.tooltip}</Tooltip>}\r\n        >\r\n          <IconButton\r\n            {...props}\r\n            onClick={props.onClick}\r\n            circle\r\n            size=\"xs\"\r\n            icon={<Icon icon={props.iconName} />}\r\n          />\r\n        </Whisper>\r\n      </ConditionalBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconBtnControl;\r\n","import React from 'react';\r\nimport { Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst ImgBtnModal = ({ src, fileName }) => {\r\n  const { isOpen, close, open } = useModalState();\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"image\"\r\n        src={src}\r\n        alt=\"file\"\r\n        onClick={open}\r\n        className=\"mw-100 mh-100 w-auto\"\r\n      />\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{fileName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            View Original\r\n          </a>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImgBtnModal;\r\n","import React from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\n\r\nconst ProfileInfoBtnModal = ({ profile, children, ...btnProps }) => {\r\n  const { isOpen, close, open } = useModalState();\r\n  const shortName = profile.name.split(' ')[0];\r\n  const { name, avatar, createdAt } = profile;\r\n\r\n  const MemberSince = new Date(createdAt).toLocaleDateString();\r\n\r\n  return (\r\n    <>\r\n      <Button {...btnProps} onClick={open}>\r\n        {shortName}\r\n      </Button>\r\n\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{shortName} profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <ProfileAvatar\r\n            src={avatar}\r\n            name={name}\r\n            className=\"width-200 height-200 img-fullsize font-huge\"\r\n          />\r\n          <h4 className=\"mt-2\">{name}</h4>\r\n          <p> Member since {MemberSince}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {children}\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoBtnModal;\r\n","import React, { memo } from 'react';\r\nimport { Button } from 'rsuite';\r\nimport TimeAgo from 'timeago-react';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport { auth } from '../../../misc/firebase';\r\nimport Presence from '../../Presence';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\nimport IconBtnControl from './IconBtnControl';\r\nimport ImgBtnModal from './ImgBtnModal';\r\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\r\n\r\nconst renderFileMessage = file => {\r\n  if (file.contentType.includes('image')) {\r\n    return (\r\n      <div className=\"h-220\">\r\n        <ImgBtnModal src={file.url} fileName={file.name} />\r\n      </div>\r\n    );\r\n  }\r\n  if (file.contentType.includes('audio')) {\r\n    return (\r\n      // eslint-disable-next-line jsx-a11y/media-has-caption\r\n      <audio controls>\r\n        <source src={file.url} type=\"audio/mp3\" />\r\n        Your browser does not support the audio element\r\n      </audio>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <a target=\"_blank\" href={file.url} rel=\"noreferrer\">\r\n      Download {file.name}\r\n    </a>\r\n  );\r\n};\r\n\r\nconst MessageItem = ({ msg, handleAdmin, handleLike, handleDelete }) => {\r\n  const { author, createdAt, text, file, likes, likeCount } = msg;\r\n\r\n  const [selfRef, isHovered] = useHover();\r\n\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const admins = useCurrentRoom(v => v.admins);\r\n\r\n  const isMsgAuthorAdmin = admins.includes(author.uid);\r\n  const isAuthor = auth.currentUser.uid === author.uid;\r\n\r\n  const canGrantAdmin = isAdmin && !isAuthor;\r\n\r\n  const canShowIcons = isHovered || isMobile;\r\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\r\n\r\n  return (\r\n    <li\r\n      className={`padded mb-1 mr-1 cursor-pointer ${\r\n        isHovered ? 'bg-black-02' : ''\r\n      }`}\r\n      ref={selfRef}\r\n    >\r\n      <div className=\"d-flex align-items-center font-bolder mb-1\">\r\n        <Presence uid={author.uid} />\r\n\r\n        <ProfileAvatar\r\n          src={author.avatar}\r\n          name={author.name}\r\n          className=\"ml-1\"\r\n          size=\"xs\"\r\n        />\r\n\r\n        <ProfileInfoBtnModal\r\n          profile={author}\r\n          appearance=\"link\"\r\n          className=\"p-0 ml-1 text-black  \"\r\n        >\r\n          {canGrantAdmin && (\r\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\">\r\n              {isMsgAuthorAdmin ? 'Remove as Admin' : 'Add as Admin'}\r\n            </Button>\r\n          )}\r\n        </ProfileInfoBtnModal>\r\n        <TimeAgo\r\n          datetime={createdAt}\r\n          className=\"font-normal text-black-45 ml-2\"\r\n        />\r\n        <IconBtnControl\r\n          {...(isLiked ? { color: 'red' } : {})}\r\n          isVisible={canShowIcons}\r\n          iconName=\"heart\"\r\n          onClick={() => handleLike(msg.id, file)}\r\n          badgeContent={likeCount}\r\n          tooltip=\"Like\"\r\n        />\r\n\r\n        {isAuthor && (\r\n          <IconBtnControl\r\n            isVisible={canShowIcons}\r\n            iconName=\"close\"\r\n            onClick={() => handleDelete(msg.id)}\r\n            tooltip=\"delete\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div>\r\n        {text && <span className=\"word-break-all\">{text}</span>}\r\n        {file && renderFileMessage(file)}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo(MessageItem);\r\n","/* eslint-disable consistent-return */\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button } from 'rsuite';\r\nimport { auth, database, storage } from '../../../misc/firebase';\r\nimport { groupBy, transformToArrWithId } from '../../../misc/helpers';\r\nimport MessageItem from './MessageItem';\r\n\r\nconst PAGE_SIZE = 15;\r\nconst messagesRef = database.ref('/messages');\r\n\r\nconst Messages = () => {\r\n  const { chatId } = useParams();\r\n  const [messages, setMessages] = useState(null);\r\n  const [limit, setLimit] = useState(PAGE_SIZE);\r\n  const selfRef = useRef();\r\n\r\n  const isChatEmpty = messages && messages.length === 0;\r\n  const canShowMessages = messages && messages.length > 0;\r\n\r\n  const loadMessges = useCallback(\r\n    limitToLast => {\r\n      messagesRef.off();\r\n\r\n      messagesRef\r\n        .orderByChild('roomId')\r\n        .equalTo(chatId)\r\n        .limitToLast(limitToLast || PAGE_SIZE)\r\n        .on('value', snap => {\r\n          const data = transformToArrWithId(snap.val());\r\n\r\n          setMessages(data);\r\n        });\r\n\r\n      setLimit(p => p + PAGE_SIZE);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const onLoadMore = useCallback(() => {\r\n    const node = selfRef.current;\r\n\r\n    const oldHeight = node.scrollHeight;\r\n\r\n    loadMessges(limit);\r\n\r\n    setTimeout(() => {\r\n      const newHeight = node.scrollHeight;\r\n\r\n      node.scrollTop = newHeight - oldHeight;\r\n    });\r\n  }, [loadMessges, limit]);\r\n\r\n  useEffect(() => {\r\n    const node = selfRef.current;\r\n\r\n    loadMessges();\r\n\r\n    setTimeout(() => {\r\n      node.scrollTop = node.scrollHeight;\r\n    }, 200);\r\n\r\n    return () => {\r\n      messagesRef.off('value');\r\n    };\r\n  }, [loadMessges]);\r\n\r\n  const handleAdmin = useCallback(\r\n    async uid => {\r\n      const adminsRef = database.ref(`/rooms/${chatId}/admins`);\r\n\r\n      let alertMsg;\r\n\r\n      await adminsRef.transaction(admins => {\r\n        if (admins) {\r\n          if (admins[uid]) {\r\n            admins[uid] = null;\r\n            alertMsg = 'Admin Removed';\r\n          } else {\r\n            admins[uid] = true;\r\n            alertMsg = 'Admin Permission Granted';\r\n          }\r\n        }\r\n        return admins;\r\n      });\r\n\r\n      Alert.info(alertMsg, 4000);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const handleLike = useCallback(async msgId => {\r\n    const { uid } = auth.currentUser;\r\n    const messageRef = database.ref(`/messages/${msgId}`);\r\n\r\n    let alertMsg;\r\n\r\n    await messageRef.transaction(msg => {\r\n      if (msg) {\r\n        if (msg.likes && msg.likes[uid]) {\r\n          msg.likeCount--;\r\n          msg.likes[uid] = null;\r\n          alertMsg = 'Like Removed';\r\n        } else {\r\n          msg.likeCount++;\r\n\r\n          if (!msg.likes) {\r\n            msg.likes = {};\r\n          }\r\n\r\n          msg.likes[uid] = true;\r\n          alertMsg = 'Liked';\r\n        }\r\n      }\r\n      return msg;\r\n    });\r\n\r\n    Alert.info(alertMsg, 4000);\r\n  }, []);\r\n\r\n  const handleDelete = useCallback(\r\n    async (msgId, file) => {\r\n      // eslint-disable-next-line no-alert\r\n      if (!window.confirm('Delete this message?')) {\r\n        return;\r\n      }\r\n      const isLast = messages[messages.length - 1].id === msgId;\r\n\r\n      const updates = {};\r\n\r\n      updates[`/messages/${msgId}`] = null;\r\n      if (isLast && messages.length > 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = {\r\n          ...messages[messages.length - 2],\r\n          msgId: messages[messages.length - 2].id,\r\n        };\r\n      }\r\n\r\n      if (isLast && messages.length === 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = null;\r\n      }\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n\r\n        Alert.info('Message deleted', 4000);\r\n      } catch (err) {\r\n        return Alert.error(err.message, 4000);\r\n      }\r\n\r\n      if (file) {\r\n        try {\r\n          const fileRef = await storage.refFromURL(file.url);\r\n          await fileRef.delete();\r\n        } catch (error) {\r\n          Alert.error(error.message, 4000);\r\n        }\r\n      }\r\n    },\r\n    [chatId, messages]\r\n  );\r\n\r\n  const renderMessages = () => {\r\n    const groups = groupBy(messages, item =>\r\n      new Date(item.createdAt).toDateString()\r\n    );\r\n\r\n    const items = [];\r\n\r\n    Object.keys(groups).forEach(date => {\r\n      items.push(\r\n        <li key={date} className=\"text-center mb-1 padded\">\r\n          {date}\r\n        </li>\r\n      );\r\n\r\n      console.log(groups[date]);\r\n\r\n      const msgs = groups[date].map(msg => (\r\n        <MessageItem\r\n          key={msg.id}\r\n          msg={msg}\r\n          handleAdmin={handleAdmin}\r\n          handleLike={handleLike}\r\n          handleDelete={handleDelete}\r\n        />\r\n      ));\r\n\r\n      items.push(...msgs);\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n  return (\r\n    <ul ref={selfRef} className=\"msg-list custom-scroll\">\r\n      {messages && messages.length >= PAGE_SIZE && (\r\n        <li className=\"text-center mt-2 mb-2\">\r\n          <Button onClick={onLoadMore} color=\"green\">\r\n            Load more\r\n          </Button>\r\n        </li>\r\n      )}\r\n      {isChatEmpty && <li>No Messages Yet</li>}\r\n      {canShowMessages && renderMessages()}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button, Icon, InputGroup, Modal, Uploader } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\r\n\r\nconst AttatchmentBtnModal = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onChange = fileArr => {\r\n    const filtered = fileArr\r\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\r\n      .slice(0, 5);\r\n\r\n    setFileList(filtered);\r\n  };\r\n\r\n  const onUpload = async () => {\r\n    try {\r\n      const uploadPromises = fileList.map(f => {\r\n        return storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(Date.now() + f.name)\r\n          .put(f.blobFile, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n      });\r\n\r\n      const uploadSnapshots = await Promise.all(uploadPromises);\r\n\r\n      const shapePromises = uploadSnapshots.map(async snap => {\r\n        return {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n      });\r\n\r\n      const files = await Promise.all(shapePromises);\r\n\r\n      await afterUpload(files);\r\n\r\n      setIsLoading(false);\r\n\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputGroup.Button onClick={open}>\r\n        <Icon icon=\"attachment\" />\r\n      </InputGroup.Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Upload Files</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Uploader\r\n            autoUpload={false}\r\n            action=\"\"\r\n            fileList={fileList}\r\n            onChange={onChange}\r\n            multiple\r\n            listType=\"picture-text\"\r\n            className=\"w-100\"\r\n            disabled={isLoading}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block disabled={isLoading} onClick={onUpload}>\r\n            Send\r\n          </Button>\r\n          <div className=\"text-right\">\r\n            <small>*only files less than 5MB are allowed</small>\r\n          </div>\r\n          <Button block onClick={close} color=\"red\" className=\"mt-2\">\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttatchmentBtnModal;\r\n","import React, { useState, useCallback } from 'react';\r\nimport { Alert, Icon, InputGroup } from 'rsuite';\r\nimport { ReactMic } from 'react-mic';\r\nimport { useParams } from 'react-router';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst AudioMsgBtn = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const onClick = useCallback(() => {\r\n    setIsRecording(p => !p);\r\n  }, []);\r\n\r\n  const onUpload = useCallback(\r\n    async data => {\r\n      setIsUploading(true);\r\n      try {\r\n        const snap = await storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(`audio_${Date.now()}.mp3`)\r\n          .put(data.blob, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n\r\n        const file = {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n\r\n        setIsUploading(false);\r\n        afterUpload([file]);\r\n      } catch (err) {\r\n        setIsUploading(false);\r\n\r\n        Alert.error(err.message, 4000);\r\n      }\r\n    },\r\n    [chatId, afterUpload]\r\n  );\r\n  return (\r\n    <div>\r\n      <InputGroup.Button\r\n        onClick={onClick}\r\n        disabled={isUploading}\r\n        className={isRecording ? 'animate-blink' : ''}\r\n      >\r\n        <Icon icon=\"microphone\" />\r\n      </InputGroup.Button>\r\n      <ReactMic\r\n        record={isRecording}\r\n        className=\"d-none\"\r\n        onStop={onUpload}\r\n        mimeType=\"audio/mp3\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioMsgBtn;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useParams } from 'react-router';\r\nimport { useProfile } from '../../../context/profile.context';\r\nimport { database } from '../../../misc/firebase';\r\nimport AttatchmentBtnModal from './AttatchmentBtnModal';\r\nimport AudioMsgBtn from './AudioMsgBtn';\r\n\r\nfunction assembleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      createdAt: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n    likeCount: 0,\r\n  };\r\n}\r\n\r\nconst ChatBottom = () => {\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { chatId } = useParams();\r\n  const { profile } = useProfile();\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onSendClick = async () => {\r\n    if (input.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    const msgData = assembleMessage(profile, chatId);\r\n    msgData.text = input;\r\n\r\n    const updates = {};\r\n\r\n    const messageId = database.ref('messages').push().key;\r\n\r\n    updates[`/messages/${messageId}`] = msgData;\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...msgData,\r\n      msgeId: messageId,\r\n    };\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await database.ref().update(updates);\r\n      setInput('');\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      Alert.error(error.message);\r\n    }\r\n  };\r\n\r\n  const onKeyDown = ev => {\r\n    if (ev.keyCode === 13) {\r\n      ev.preventDefault();\r\n      onSendClick();\r\n    }\r\n  };\r\n\r\n  const afterUpload = useCallback(\r\n    async files => {\r\n      setIsLoading(true);\r\n\r\n      const updates = {};\r\n\r\n      files.forEach(file => {\r\n        const msgData = assembleMessage(profile, chatId);\r\n        msgData.file = file;\r\n\r\n        const messageId = database.ref('messages').push().key;\r\n        updates[`/messages/${messageId}`] = msgData;\r\n      });\r\n\r\n      const lastMsgId = Object.keys(updates).pop();\r\n\r\n      updates[`/rooms/${chatId}/lastMessage`] = {\r\n        ...updates[lastMsgId],\r\n        msgeId: lastMsgId,\r\n      };\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        setIsLoading(false);\r\n        Alert.error(error.message);\r\n      }\r\n    },\r\n    [chatId, profile]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <InputGroup>\r\n        <AttatchmentBtnModal afterUpload={afterUpload} />\r\n        <AudioMsgBtn afterUpload={afterUpload} />\r\n        <Input\r\n          placeholder=\" Write a new message here\"\r\n          value={input}\r\n          onChange={onInputChange}\r\n          onKeyDown={onKeyDown}\r\n        />\r\n        <InputGroup.Button\r\n          color=\"blue\"\r\n          appearance=\"primary\"\r\n          onClick={onSendClick}\r\n          disabled={isLoading}\r\n        >\r\n          <Icon icon=\"send\" />\r\n        </InputGroup.Button>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBottom;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'rsuite';\r\nimport ChatTop from '../../components/chat-window/top';\r\nimport Messages from '../../components/chat-window/messages';\r\nimport ChatBottom from '../../components/chat-window/bottom';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport { CurrentRoomProvider } from '../../context/current-room.context';\r\nimport { transformToArr } from '../../misc/helpers';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst Chat = () => {\r\n  const { chatId } = useParams();\r\n  const rooms = useRooms();\r\n\r\n  if (!rooms) {\r\n    return <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />;\r\n  }\r\n\r\n  const currentRoom = rooms.find(room => room.id === chatId);\r\n\r\n  if (!currentRoom) {\r\n    return <h6 className=\"text-center mt-page\"> `Chat {chatId} not found` </h6>;\r\n  }\r\n\r\n  const { name, description } = currentRoom;\r\n\r\n  const admins = transformToArr(currentRoom.admins);\r\n  const isAdmin = admins.includes(auth.currentUser.uid);\r\n\r\n  const currentRoomData = {\r\n    name,\r\n    description,\r\n    admins,\r\n    isAdmin,\r\n  };\r\n\r\n  return (\r\n    <CurrentRoomProvider data={currentRoomData}>\r\n      <div className=\"chat-top\">\r\n        <ChatTop />\r\n      </div>\r\n      <div className=\"chat-middle\">\r\n        <Messages />\r\n      </div>\r\n      <div className=\"chat-bottom\">\r\n        <ChatBottom />\r\n      </div>\r\n    </CurrentRoomProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router';\r\nimport { Col, Grid, Row } from 'rsuite';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { RoomsProvider } from '../../context/rooms.context';\r\nimport { useMediaQuery } from '../../misc/custom-hooks';\r\nimport Chat from './Chat';\r\n\r\nconst Home = () => {\r\n  const isDesktop = useMediaQuery('(min-width:992px)');\r\n\r\n  const { isExact } = useRouteMatch();\r\n\r\n  const canRenderSideBar = isDesktop || isExact;\r\n\r\n  return (\r\n    <RoomsProvider>\r\n      <Grid fluid className=\"h-100\">\r\n        <Row className=\"h-100\">\r\n          {canRenderSideBar && (\r\n            <Col xs={24} md={8} className=\"h-100\">\r\n              <Sidebar />\r\n            </Col>\r\n          )}\r\n          <Switch>\r\n            <Route exact path=\"/chat/:chatId\">\r\n              <Col xs={24} md={16} className=\"h-100\">\r\n                <Chat />\r\n              </Col>\r\n            </Route>\r\n            <Route>\r\n              {isDesktop && (\r\n                <Col xs={24} md={16} className=\"h-100\">\r\n                  <h6 className=\"text-center mt-page\">Please select chat</h6>{' '}\r\n                </Col>\r\n              )}\r\n            </Route>\r\n          </Switch>\r\n        </Row>\r\n      </Grid>\r\n    </RoomsProvider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PublicRoute = ({ children, ...routeProps }) => {\r\n  const { profile, isLoading } = useProfile();\r\n\r\n  if (isLoading && !profile) {\r\n    <Container>\r\n      <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n    </Container>;\r\n  }\r\n\r\n  if (profile && !isLoading) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\nimport { Switch } from 'react-router';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport Signin from './pages/Signin';\nimport './styles/main.scss';\nimport PrivateRoute from './components/PrivateRoute';\nimport Home from './pages/home/index';\nimport PublicRoute from './components/PublicRoute';\nimport { ProfileProvider } from './context/profile.context';\n\nconst App = () => {\n  return (\n    <ProfileProvider>\n      <Switch>\n        <PublicRoute path=\"/signin\">\n          <Signin />\n        </PublicRoute>\n        <PrivateRoute path=\"/\">\n          <Home />\n        </PrivateRoute>\n      </Switch>\n    </ProfileProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}